<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c83ece50-0057-4cb4-83d6-50f5d4c1bfa0" name="Default" comment="">
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Collectable.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Collectable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Collectable.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Collectable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/connection/ebin/Elixir.Connection.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/connection/ebin/Elixir.Connection.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/connection/ebin/Elixir.Connection.beam" afterPath="$PROJECT_DIR$/_build/test/lib/connection/ebin/Elixir.Connection.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.App.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.App.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.App.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.App.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Backoff.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Backoff.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Backoff.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Backoff.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Connection.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Connection.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Connection.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Connection.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Error.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Error.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Error.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Error.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.LogEntry.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.LogEntry.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.LogEntry.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.LogEntry.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Manager.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Manager.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Manager.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Manager.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Owner.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Owner.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Owner.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Owner.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.OwnerSupervisor.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.OwnerSupervisor.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.OwnerSupervisor.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.OwnerSupervisor.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Pool.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Pool.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Pool.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Pool.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.PoolSupervisor.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.PoolSupervisor.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.PoolSupervisor.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.PoolSupervisor.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Pool.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Pool.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Pool.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Pool.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.Worker.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.Worker.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.Worker.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.Worker.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.DBConnection.Query.Postgrex.Parameters.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.DBConnection.Query.Postgrex.Parameters.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.DBConnection.Query.Postgrex.Query.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.DBConnection.Query.Postgrex.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.DBConnection.Query.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.DBConnection.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Query.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.DBConnection.Query.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.DBConnection.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Query.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Broker.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Broker.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Broker.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Broker.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Pool.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Pool.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Pool.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Pool.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Starter.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Starter.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Starter.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Starter.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Supervisor.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Supervisor.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Supervisor.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Supervisor.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Timeout.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Timeout.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Timeout.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Timeout.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Task.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Task.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Task.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Task.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Watcher.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Watcher.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Watcher.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.Watcher.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.beam" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/ebin/Elixir.DBConnection.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.Decimal.Context.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.Decimal.Context.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.Decimal.Context.beam" afterPath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.Decimal.Context.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.Decimal.Error.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.Decimal.Error.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.Decimal.Error.beam" afterPath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.Decimal.Error.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.Decimal.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.Decimal.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.Decimal.beam" afterPath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.Decimal.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapter.Migration.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapter.Migration.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Migration.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Migration.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapter.Storage.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapter.Storage.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Storage.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Storage.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapter.Transaction.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapter.Transaction.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Transaction.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Transaction.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapter.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapter.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.MySQL.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.MySQL.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.MySQL.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.MySQL.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.Postgres.Connection.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.Postgres.Connection.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.Postgres.Connection.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.Postgres.Connection.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.Postgres.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.Postgres.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.Postgres.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.Postgres.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.Query.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.Query.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.Sandbox.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.Sandbox.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.Sandbox.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.Sandbox.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Adapters.SQL.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.BelongsTo.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.BelongsTo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.BelongsTo.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.BelongsTo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.Has.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.Has.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.Has.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.Has.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.HasThrough.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.HasThrough.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.HasThrough.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.HasThrough.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.NotLoaded.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.NotLoaded.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.NotLoaded.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.NotLoaded.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Association.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Association.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.CastError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.CastError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.CastError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.CastError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.ChangeError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.ChangeError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.ChangeError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.ChangeError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Changeset.Relation.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Changeset.Relation.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Changeset.Relation.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Changeset.Relation.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Changeset.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Changeset.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Changeset.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Changeset.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.ConstraintError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.ConstraintError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.ConstraintError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.ConstraintError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Ecto.DataType.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Ecto.DataType.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Ecto.DataType.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Ecto.DataType.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Date.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Date.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.DateTime.Utils.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.DateTime.Utils.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.DateTime.Utils.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.DateTime.Utils.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.DateTime.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.DateTime.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.DateTime.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.DateTime.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Embedded.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Embedded.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Embedded.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Embedded.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.InvalidChangesetError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.InvalidChangesetError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.InvalidChangesetError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.InvalidChangesetError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.InvalidURLError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.InvalidURLError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.InvalidURLError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.InvalidURLError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.LogEntry.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.LogEntry.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.LogEntry.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.LogEntry.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.Index.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.Index.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.Index.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.Index.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.Reference.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.Reference.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.Reference.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.Reference.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.Runner.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.Runner.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.Runner.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.Runner.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.SchemaMigration.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.SchemaMigration.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.SchemaMigration.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.SchemaMigration.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.Table.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.Table.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.Table.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.Table.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migration.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migration.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.MigrationError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.MigrationError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.MigrationError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.MigrationError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migrator.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Migrator.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migrator.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Migrator.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.MultipleResultsError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.MultipleResultsError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.MultipleResultsError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.MultipleResultsError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyFieldError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyFieldError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyFieldError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyFieldError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyValueError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyValueError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyValueError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyValueError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.NoResultsError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.NoResultsError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.NoResultsError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.NoResultsError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Distinct.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Distinct.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Distinct.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Distinct.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Filter.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Filter.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Filter.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Filter.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.From.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.From.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.From.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.From.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.GroupBy.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.GroupBy.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.GroupBy.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.GroupBy.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.LimitOffset.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.LimitOffset.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.LimitOffset.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.LimitOffset.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Lock.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Lock.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Lock.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Lock.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.OrderBy.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.OrderBy.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.OrderBy.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.OrderBy.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Preload.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Preload.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Preload.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Preload.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Select.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Select.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Select.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Select.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Update.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Update.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Update.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Update.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Builder.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.CompileError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.CompileError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.CompileError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.CompileError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.JoinExpr.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.JoinExpr.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.JoinExpr.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.JoinExpr.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Planner.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Planner.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Planner.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Planner.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.QueryExpr.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.QueryExpr.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.QueryExpr.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.QueryExpr.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.SelectExpr.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.SelectExpr.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.SelectExpr.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.SelectExpr.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Tagged.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.Tagged.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Tagged.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.Tagged.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.QueryError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.QueryError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.QueryError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.QueryError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.Atom.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.Atom.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Atom.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Atom.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.BitString.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.BitString.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.BitString.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.BitString.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.Ecto.Query.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.Ecto.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Ecto.Query.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Ecto.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.Tuple.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.Tuple.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Tuple.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Tuple.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Ecto.Queryable.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Ecto.Queryable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Queryable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Ecto.Queryable.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Ecto.Queryable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.Assoc.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.Assoc.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Assoc.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Assoc.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.Preloader.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.Preloader.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Preloader.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Preloader.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.Queryable.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.Queryable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Queryable.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Queryable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.Schema.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.Schema.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Schema.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Schema.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Repo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Repo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Schema.Metadata.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Schema.Metadata.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Schema.Metadata.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Schema.Metadata.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Schema.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Schema.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Schema.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Schema.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.StaleModelError.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.StaleModelError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.StaleModelError.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.StaleModelError.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Storage.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Storage.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Storage.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Storage.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Time.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Time.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Type.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.Type.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Type.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.Type.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.UUID.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.UUID.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.UUID.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.UUID.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Ecto.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Ecto.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Enumerable.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Enumerable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Enumerable.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Enumerable.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ChannelCase.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ChannelCase.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ConnCase.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ConnCase.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Endpoint.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Endpoint.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Endpoint.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Endpoint.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ErrorHelpers.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ErrorHelpers.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ErrorHelpers.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ErrorHelpers.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ErrorView.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ErrorView.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ErrorView.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ErrorView.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Gettext.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Gettext.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Gettext.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Gettext.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.LayoutView.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.LayoutView.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.LayoutView.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.LayoutView.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ModelCase.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.ModelCase.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.PageController.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.PageController.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.PageController.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.PageController.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.PageView.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.PageView.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.PageView.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.PageView.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Repo.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Repo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Repo.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Repo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Router.Helpers.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Router.Helpers.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Router.Helpers.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Router.Helpers.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Router.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Router.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Router.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Router.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.UserSocket.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.UserSocket.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.UserSocket.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.UserSocket.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Web.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Web.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Web.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.Web.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.beam" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/ebin/Elixir.ElixirgardenApi.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.IEx.Info.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.IEx.Info.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.IEx.Info.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.IEx.Info.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.Inspect.Decimal.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.Inspect.Decimal.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.Inspect.Decimal.beam" afterPath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.Inspect.Decimal.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Association.NotLoaded.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Association.NotLoaded.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Association.NotLoaded.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Association.NotLoaded.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Date.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Date.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.DateTime.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.DateTime.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.DateTime.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.DateTime.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Query.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Query.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Schema.Metadata.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Schema.Metadata.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Schema.Metadata.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Schema.Metadata.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Time.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Inspect.Ecto.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Time.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Inspect.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Inspect.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Inspect.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Inspect.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.List.Chars.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.List.Chars.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.List.Chars.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.List.Chars.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Ecto.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Ecto.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Ecto.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Ecto.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Create.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Create.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Create.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Create.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Drop.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Drop.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Drop.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Drop.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Migration.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Migration.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Migration.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Migration.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Repo.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Repo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Repo.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Repo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Migrate.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Migrate.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Migrate.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Migrate.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Rollback.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Rollback.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Rollback.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Rollback.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Phoenix.HTML.FormData.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Phoenix.HTML.FormData.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Phoenix.HTML.FormData.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Phoenix.HTML.FormData.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Phoenix.HTML.Safe.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Phoenix.HTML.Safe.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Phoenix.HTML.Safe.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Phoenix.HTML.Safe.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Phoenix.Param.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Phoenix.Param.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Phoenix.Param.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Phoenix.Param.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Plug.Exception.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Plug.Exception.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Plug.Exception.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Plug.Exception.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Poison.Decoder.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Poison.Decoder.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Poison.Decoder.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Poison.Decoder.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Poison.Encoder.Decimal.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Poison.Encoder.Decimal.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Poison.Encoder.Decimal.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Poison.Encoder.Decimal.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.Date.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.Date.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.DateTime.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.DateTime.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.DateTime.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.DateTime.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.Time.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.Time.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.Poison.Encoder.Ecto.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Poison.Encoder.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.Poison.Encoder.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Poison.Encoder.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.Poison.Encoder.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.App.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.App.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.BinaryExtension.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.BinaryExtension.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.BinaryUtils.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.BinaryUtils.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.CIDR.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.CIDR.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Date.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Error.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Error.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.ErrorCode.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.ErrorCode.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extension.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extension.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Array.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Array.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Bool.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Bool.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Date.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Float4.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Float4.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Float8.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Float8.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.HStore.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.HStore.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int2.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int2.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int4.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int4.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int8.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int8.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Interval.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Interval.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.JSON.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.JSON.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.MACADDR.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.MACADDR.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Network.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Network.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Numeric.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Numeric.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.OID.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.OID.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Point.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Point.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Range.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Range.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Raw.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Raw.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Record.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Record.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.TID.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.TID.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Time.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Timestamp.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Timestamp.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.UUID.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.UUID.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Void.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Void.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.INET.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.INET.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Interval.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Interval.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.MACADDR.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.MACADDR.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Messages.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Messages.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Notifications.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Notifications.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Parameters.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Parameters.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Point.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Point.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Protocol.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Protocol.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Query.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Range.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Range.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Result.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Result.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Time.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Timestamp.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Timestamp.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.TypeInfo.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.TypeInfo.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.TypeServer.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.TypeServer.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Types.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Types.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Utils.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.Utils.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.Postgrex.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.String.Chars.Decimal.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/decimal/ebin/Elixir.String.Chars.Decimal.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.String.Chars.Decimal.beam" afterPath="$PROJECT_DIR$/_build/test/lib/decimal/ebin/Elixir.String.Chars.Decimal.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.String.Chars.Ecto.Date.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.String.Chars.Ecto.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.String.Chars.Ecto.Date.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.String.Chars.Ecto.Date.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.String.Chars.Ecto.DateTime.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.String.Chars.Ecto.DateTime.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.String.Chars.Ecto.DateTime.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.String.Chars.Ecto.DateTime.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.String.Chars.Ecto.Time.beam" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/ebin/Elixir.String.Chars.Ecto.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.String.Chars.Ecto.Time.beam" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/ebin/Elixir.String.Chars.Ecto.Time.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.String.Chars.Postgrex.Query.beam" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/ebin/Elixir.String.Chars.Postgrex.Query.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.String.Chars.beam" afterPath="$PROJECT_DIR$/_build/dev/consolidated/Elixir.String.Chars.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/consolidated/Elixir.String.Chars.beam" afterPath="$PROJECT_DIR$/_build/test/consolidated/Elixir.String.Chars.beam" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/db_connection/.compile.elixir" afterPath="$PROJECT_DIR$/_build/dev/lib/db_connection/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/decimal/.compile.elixir" afterPath="$PROJECT_DIR$/_build/dev/lib/decimal/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/ecto/.compile.elixir" afterPath="$PROJECT_DIR$/_build/dev/lib/ecto/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/.compile.elixir" afterPath="$PROJECT_DIR$/_build/dev/lib/elixirgarden_api/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/db_connection/.compile.elixir" afterPath="$PROJECT_DIR$/_build/test/lib/db_connection/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/decimal/.compile.elixir" afterPath="$PROJECT_DIR$/_build/test/lib/decimal/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/ecto/.compile.elixir" afterPath="$PROJECT_DIR$/_build/test/lib/ecto/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/.compile.elixir" afterPath="$PROJECT_DIR$/_build/test/lib/elixirgarden_api/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/_build/test/lib/postgrex/.compile.elixir" afterPath="$PROJECT_DIR$/_build/test/lib/postgrex/.compile.elixir" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/../docker/elixirgarden-postgres/Dockerfile" afterPath="$PROJECT_DIR$/../docker/elixirgarden-postgres/Dockerfile" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/config/dev.exs" afterPath="$PROJECT_DIR$/config/dev.exs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mix.exs" afterPath="$PROJECT_DIR$/mix.exs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mix.lock" afterPath="$PROJECT_DIR$/mix.lock" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/config/prod.secret.exs" afterPath="$PROJECT_DIR$/config/prod.secret.exs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/config/test.exs" afterPath="$PROJECT_DIR$/config/test.exs" />
    </list>
    <ignored path="elixirgarden_api.iws" />
    <ignored path=".idea/workspace.xml" />
    <ignored path=".idea/dataSources.local.xml" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="elixirgarden_api" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="20160301185916_initial.exs" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/priv/repo/migrations/20160301185916_initial.exs">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.039173014">
              <caret line="2" column="0" selection-start-line="2" selection-start-column="0" selection-end-line="2" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
  </component>
  <component name="NamedScopeManager">
    <order />
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="1919" />
    <option name="y" value="27" />
    <option name="width" value="1922" />
    <option name="height" value="1054" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="0" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="priv" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="repo" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="priv" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="repo" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="migrations" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="elixirgarden_api" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="priv" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="Elixir External Tools" />
    <property name="settings.editor.splitter.proportion" value="0.2" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="FullScreen" value="false" />
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c83ece50-0057-4cb4-83d6-50f5d4c1bfa0" name="Default" comment="" />
      <created>1456861739964</created>
      <option name="number" value="Default" />
      <updated>1456861739964</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="1919" y="27" width="1922" height="1054" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Application Servers" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.25" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/priv/repo/migrations/20160301185916_initial.exs">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/priv/repo/migrations/20160301185916_initial.exs">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0">
          <caret line="7" column="32" selection-start-line="7" selection-start-column="32" selection-end-line="7" selection-end-column="32" />
          <folding />
        </state>
      </provider>
      <provider editor-type-id="com.intellij.database.editor.CsvTableFileEditorProvider">
        <state />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/priv/repo/migrations/20160301185916_initial.exs">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/priv/repo/migrations/20160301185916_initial.exs">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mix.exs">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mix.exs">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.17627856">
          <caret line="9" column="38" selection-start-line="9" selection-start-column="38" selection-end-line="9" selection-end-column="38" />
        </state>
      </provider>
      <provider editor-type-id="com.intellij.database.editor.CsvTableFileEditorProvider">
        <state />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/priv/repo/migrations/20160301185916_initial.exs">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.039173014">
          <caret line="2" column="0" selection-start-line="2" selection-start-column="0" selection-end-line="2" selection-end-column="0" />
          <folding />
        </state>
      </provider>
      <provider editor-type-id="com.intellij.database.editor.CsvTableFileEditorProvider">
        <state />
      </provider>
    </entry>
  </component>
</project>
